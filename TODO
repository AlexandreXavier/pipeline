TODOs
=====

- 12.04 ir download for aopt?
- setup testing with http://pytest.org/latest/
- maybe rename package to "pipeline"
- externalize bundles (except basic)
  also the _shared -> copyover thing is kind of in the wrong place.
  and might be very confusing once the bundles are seperate. the resoures
  should be managed by the bundle authors not the pipeline task.

- make tasks more granular and side-effect free
- switch to dir for each upload: done, but needs cleanup (task should get
  a directory or a ZIP and discover everything else)
- Uploader (nginx/progress/chunked upload)
- better basic viewer

- cleanup arch
- it's time for docs
- convert deployment to virtualenv and circus on x3dom server
- error handing and status updates in tasks
- use WTforms to simplify form/error handling
- sessions
- redesign of upload/result workflow (personalized, with state, rdbms)
- uploadable user templates
- API
- scaling


More tossing around of those ideas
----------------------------------

- Maybe also put possible meshlab options with the template bundles
  This associates the UI for meshlab options to the template and can
  simply be customized.
- Maybe also put customs tasks to the template bundles. or better yet singal 
  handlers (celery already emitts signals)
- maybe this should not be templates bundels at all anymore but deployable
  python modules. this way it's entirely seperated from the application and
  can be hooked in dynamically. also instead of only output templates, 
  much more can be provided by the user, if so desired
- probably switch to Pyramid  as underlying layer (outgrowing flask, py3 
  support, resource strings, speed, composabiliyt, flexiblity, etc.)